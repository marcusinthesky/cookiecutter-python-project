name: Pre-commit (diff) on PR

on:
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: write

jobs:
  precommit:
    name: Run pre-commit on changed files
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout repository (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv (for uv hooks)
        uses: astral-sh/setup-uv@v3

      - name: Install pre-commit
        run: pip install --upgrade pip pre-commit

      - name: Ensure origin/main is available
        run: |
          git fetch origin main:refs/remotes/origin/main

      - name: Run pre-commit on diff
        id: precommit
        continue-on-error: true
        run: |
          pre-commit run --from-ref origin/main --to-ref HEAD | tee precommit_output.txt

      - name: Upload pre-commit output artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: precommit-output
          path: precommit_output.txt

      - name: Comment results on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        env:
          PRECOMMIT_STATUS: ${{ steps.precommit.outcome }}
        with:
          script: |
            const fs = require('fs');
            const path = 'precommit_output.txt';
            let output = '';
            try {
              output = fs.readFileSync(path, 'utf8');
            } catch (e) {
              output = '(no output file found)';
            }
            // Truncate very long outputs to avoid API limits (~65k safe slice)
            const maxLen = 65000;
            if (output.length > maxLen) {
              output = output.slice(output.length - maxLen);
              output = '... [truncated]\n' + output;
            }
            const status = process.env.PRECOMMIT_STATUS === 'success' ? 'passed' : 'found issues';
            const emoji = process.env.PRECOMMIT_STATUS === 'success' ? '✅' : '❌';
            const body = `### ${emoji} Pre-commit ${status}\n\n` +
              `Command: \`pre-commit run --from-ref origin/main --to-ref HEAD\`\n\n` +
              `<details><summary>Show output</summary>\n\n\n` +
              '```\n' + output + '\n```\n\n' +
              '</details>';
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body,
            });

      - name: Fail if pre-commit found issues
        if: steps.precommit.outcome == 'failure'
        run: exit 1
